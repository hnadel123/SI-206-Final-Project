# Weathering the Wait Time Project
# SI 206 Final Project
# Authors: Nadia Reddin, Hannah Nadel

import time
import sqlite3
import matplotlib.pyplot as plt
from hannah import fetch_weather_data
from Nadia import fetch_disneyland_data

DB_NAME = 'weathering_the_wait_time.db'

def create_tables():
    conn = sqlite3.connect(DB_NAME)
    cur = conn.cursor()

    cur.execute('''CREATE TABLE IF NOT EXISTS DisneylandRides (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        ride_name TEXT,
        wait_time INTEGER,
        ride_status TEXT,
        ride_type TEXT,
        timestamp TEXT
    )''')

    cur.execute('''CREATE TABLE IF NOT EXISTS Weather (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        temperature REAL,
        condition TEXT,
        humidity REAL,
        precipitation REAL,
        timestamp TEXT
    )''')

    cur.execute('''CREATE TABLE IF NOT EXISTS CombinedData (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        ride_name TEXT,
        wait_time INTEGER,
        temperature REAL,
        condition TEXT,
        timestamp TEXT
    )''')

    conn.commit()
    conn.close()

def combine_data(timestamp):
    conn = sqlite3.connect(DB_NAME)
    cur = conn.cursor()

    cur.execute('''
        INSERT INTO CombinedData (ride_name, wait_time, temperature, condition, timestamp)
        SELECT DR.ride_name, DR.wait_time, W.temperature, W.condition, DR.timestamp
        FROM DisneylandRides AS DR
        JOIN Weather AS W ON DR.timestamp = W.timestamp
        WHERE DR.timestamp = ?''', (timestamp,))

    conn.commit()
    conn.close()

def plot_wait_times_vs_temperature():
    conn = sqlite3.connect(DB_NAME)
    cur = conn.cursor()

    cur.execute('SELECT temperature, wait_time FROM CombinedData')
    results = cur.fetchall()
    conn.close()

    temps = [row[0] for row in results]
    waits = [row[1] for row in results]

    plt.scatter(temps, waits)
    plt.xlabel("Temperature (Â°C)")
    plt.ylabel("Wait Time (minutes)")
    plt.title("Disneyland Ride Wait Times vs. Temperature")
    plt.grid(True)
    plt.show()

def main():
    create_tables()
    timestamp = time.strftime('%Y-%m-%d %H:00:00')
    fetch_disneyland_data(timestamp)
    fetch_weather_data(timestamp)
    combine_data(timestamp)
    plot_wait_times_vs_temperature()

if __name__ == '__main__':
    main()

